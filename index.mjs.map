{"version":3,"file":"index.mjs","sources":["../lib/resolve_stride.js","../lib/main.js","../lib/assign.js","../lib/numel.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Resolves a stride length for broadcasting a one-dimensional array.\n*\n* @private\n* @param {NonNegativeInteger} M - input array length\n* @param {NonNegativeInteger} N - output array length\n* @throws {Error} input arrays must be broadcast compatible\n* @returns {NonNegativeInteger} stride length\n*/\nfunction resolveStride( M, N ) {\n\t// Note that this effectively in-lines logic from `@stdlib/array/base/broadcast-array` in order to avoid unnecessary object creation...\n\tif ( M === 1 ) {\n\t\treturn 0;\n\t}\n\tif ( M === N ) {\n\t\treturn 1;\n\t}\n\tthrow new Error( 'invalid arguments. Input arguments are not broadcast compatible.' );\n}\n\n\n// EXPORTS //\n\nexport default resolveStride;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport resolveGetter from '@stdlib/array-base-resolve-getter';\nimport maxn from '@stdlib/math-base-special-maxn';\nimport resolveStride from './resolve_stride.js';\n\n\n// MAIN //\n\n/**\n* Takes elements from either one of two arrays depending on a condition.\n*\n* @param {Collection} condition - indicator array\n* @param {Collection} x - first input array\n* @param {Collection} y - second input array\n* @throws {Error} input arrays must be broadcast compatible\n* @returns {Array} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var y = [ 5, 6, 7, 8 ];\n*\n* var condition = [ true, false, true, false ];\n*\n* var z = where( condition, x, y );\n* // returns [ 1, 6, 3, 8 ]\n*/\nfunction where( condition, x, y ) {\n\tvar xget;\n\tvar yget;\n\tvar cget;\n\tvar lens;\n\tvar out;\n\tvar sx;\n\tvar sy;\n\tvar sc;\n\tvar ix;\n\tvar iy;\n\tvar ic;\n\tvar N;\n\tvar v;\n\tvar i;\n\n\t// Cache the lengths of the input arrays:\n\tlens = [ condition.length, x.length, y.length ];\n\n\t// Check whether we can avoid doing any further work...\n\tif ( lens[ 0 ] === 0 ) {\n\t\t// E.g., `where( [], [ 1, 2 ], [ 3, 4 ] )`\n\t\treturn [];\n\t}\n\t// Compute the output array length:\n\tN = maxn( lens[ 0 ], lens[ 1 ], lens[ 2 ] );\n\n\t// Broadcast the arrays by computing strides:\n\tsc = resolveStride( lens[ 0 ], N );\n\tsx = resolveStride( lens[ 1 ], N );\n\tsy = resolveStride( lens[ 2 ], N );\n\n\t// Resolve accessors for retrieving array elements:\n\tcget = resolveGetter( condition );\n\txget = resolveGetter( x );\n\tyget = resolveGetter( y );\n\n\t// Initialize indices:\n\tic = 0;\n\tix = 0;\n\tiy = 0;\n\n\t// Extract each desired element from a provided array...\n\tout = [];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( cget( condition, ic ) ) {\n\t\t\tv = xget( x, ix );\n\t\t} else {\n\t\t\tv = yget( y, iy );\n\t\t}\n\t\tout.push( v ); // use `Array#push` to ensure \"fast\" elements\n\t\tic += sc;\n\t\tix += sx;\n\t\tiy += sy;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default where;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isComplexDataType from '@stdlib/array-base-assert-is-complex-floating-point-data-type';\nimport isBooleanDataType from '@stdlib/array-base-assert-is-boolean-data-type';\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport reinterpretCmplx from '@stdlib/strided-base-reinterpret-complex';\nimport reinterpretBool from '@stdlib/strided-base-reinterpret-boolean';\nimport resolveStride from './resolve_stride.js';\nimport numel from './numel.js';\n\n\n// FUNCTIONS //\n\n/**\n* Takes elements from either one indexed array or another depending on a condition and assigns the values to elements in an indexed output array.\n*\n* @private\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Collection} condition - indicator array\n* @param {Collection} x - first input array\n* @param {Collection} y - second input array\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @throws {Error} input arrays must be broadcast compatible with the output array\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var y = [ 5, 6, 7, 8 ];\n*\n* var out = [ 0, 0, 0, 0 ];\n* var condition = [ true, false, true, false ];\n*\n* var arr = indexed( out.length, condition, x, y, out, 1, 0 );\n* // returns [ 1, 6, 3, 8 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\nfunction indexed( N, condition, x, y, out, stride, offset ) {\n\tvar sx;\n\tvar sy;\n\tvar sc;\n\tvar ix;\n\tvar iy;\n\tvar ic;\n\tvar io;\n\tvar i;\n\n\t// Broadcast the arrays by computing strides:\n\tsc = resolveStride( condition.length, N );\n\tsx = resolveStride( x.length, N );\n\tsy = resolveStride( y.length, N );\n\n\t// Initialize indices:\n\tic = 0;\n\tix = 0;\n\tiy = 0;\n\tio = offset;\n\n\t// Extract each desired element from a provided array...\n\tfor ( i = 0; i < N; i++ ) {\n\t\tout[ io ] = ( condition[ ic ] ) ? x[ ix ] : y[ iy ];\n\t\tic += sc;\n\t\tix += sx;\n\t\tiy += sy;\n\t\tio += stride;\n\t}\n\treturn out;\n}\n\n/**\n* Takes elements from either one accessor array or another depending on a condition and assigns the values to elements in an accessor output array.\n*\n* @private\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Object} condition - condition array object\n* @param {Object} x - first input array object\n* @param {Object} y - second input array object\n* @param {Object} out - output array object\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @returns {Collection} output array\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = toAccessorArray( [ 1, 2, 3, 4 ] );\n* var y = toAccessorArray( [ 5, 6, 7, 8 ] );\n*\n* var condition = toAccessorArray( [ true, false, true, false ] );\n*\n* var out = toAccessorArray( [ 0, 0, 0, 0 ] );\n* var arr = accessors( out.length, arraylike2object( condition ), arraylike2object( x ), arraylike2object( y ), arraylike2object( out ), 1, 0 );\n*\n* var v = arr.get( 0 );\n* // returns 1\n*\n* v = arr.get( 1 );\n* // returns 6\n*/\nfunction accessors( N, condition, x, y, out, stride, offset ) {\n\tvar xdata;\n\tvar ydata;\n\tvar cdata;\n\tvar odata;\n\tvar xget;\n\tvar yget;\n\tvar cget;\n\tvar oset;\n\tvar sx;\n\tvar sy;\n\tvar sc;\n\tvar ix;\n\tvar iy;\n\tvar ic;\n\tvar io;\n\tvar i;\n\n\tcdata = condition.data;\n\txdata = x.data;\n\tydata = y.data;\n\todata = out.data;\n\n\tcget = condition.accessors[ 0 ];\n\txget = x.accessors[ 0 ];\n\tyget = y.accessors[ 0 ];\n\toset = out.accessors[ 1 ];\n\n\t// Broadcast the arrays by computing strides:\n\tsc = resolveStride( cdata.length, N );\n\tsx = resolveStride( xdata.length, N );\n\tsy = resolveStride( ydata.length, N );\n\n\t// Initialize indices:\n\tic = 0;\n\tix = 0;\n\tiy = 0;\n\tio = offset;\n\n\t// Extract each desired element from a provided array...\n\tfor ( i = 0; i < N; i++ ) {\n\t\toset( odata, io, ( cget( cdata, ic ) ) ? xget( xdata, ix ) : yget( ydata, iy ) ); // eslint-disable-line max-len\n\t\tic += sc;\n\t\tix += sx;\n\t\tiy += sy;\n\t\tio += stride;\n\t}\n\treturn odata;\n}\n\n/**\n* Takes elements from either one complex array or another depending on a condition and assigns the values to elements in a complex output array.\n*\n* @private\n* @param {NonNegativeInteger} N - number of indexed elements\n* @param {Object} condition - condition array object\n* @param {Collection} x - first real-valued floating-point input array view\n* @param {Collection} y - second real-valued floating-point input array view\n* @param {Collection} out - real-valued floating-point output array view\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @returns {Collection} output array view\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0 ] );\n* var y = new Float64Array( [ 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0 ] );\n*\n* var condition = [ true, false, true, false ];\n*\n* var out = new Float64Array( 8 );\n*\n* var arr = complex( 4, arraylike2object( condition ), x, y, out, 1, 0 );\n* // returns <Float64Array>[ 1.0, 2.0, 11.0, 12.0, 5.0, 6.0, 15.0, 16.0 ]\n*/\nfunction complex( N, condition, x, y, out, stride, offset ) {\n\tvar cdata;\n\tvar cget;\n\tvar sx;\n\tvar sy;\n\tvar sc;\n\tvar so;\n\tvar ix;\n\tvar iy;\n\tvar ic;\n\tvar io;\n\tvar i;\n\n\tcdata = condition.data;\n\tcget = condition.accessors[ 0 ];\n\n\t// Broadcast the arrays by computing strides (note: multiply strides by 2 for complex array arguments, as a real-valued array view consists of interleaved real and imaginary components):\n\tsc = resolveStride( cdata.length, N );\n\tsx = resolveStride( x.length/2, N ) * 2;\n\tsy = resolveStride( y.length/2, N ) * 2;\n\tso = stride * 2;\n\n\t// Initialize indices:\n\tic = 0;\n\tix = 0;\n\tiy = 0;\n\tio = offset * 2; // note: account for interleaved real and imaginary components\n\n\t// Extract each desired element from a provided array...\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( cget( cdata, ic ) ) {\n\t\t\tout[ io ] = x[ ix ];\n\t\t\tout[ io+1 ] = x[ ix+1 ];\n\t\t} else {\n\t\t\tout[ io ] = y[ iy ];\n\t\t\tout[ io+1 ] = y[ iy+1 ];\n\t\t}\n\t\tic += sc;\n\t\tix += sx;\n\t\tiy += sy;\n\t\tio += so;\n\t}\n\treturn out;\n}\n\n\n// MAIN //\n\n/**\n* Takes elements from either one of two arrays depending on a condition and assigns the values to elements in a provided output array.\n*\n* @param {Collection} condition - indicator array\n* @param {Collection} x - first input array\n* @param {Collection} y - second input array\n* @param {Collection} out - output array\n* @param {integer} stride - output array stride\n* @param {NonNegativeInteger} offset - output array offset\n* @throws {Error} input arrays must be broadcast compatible with the output array\n* @returns {Collection} output array\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var y = [ 5, 6, 7, 8 ];\n*\n* var out = [ 0, 0, 0, 0 ];\n* var condition = [ true, false, true, false ];\n*\n* var arr = assign( condition, x, y, out, 1, 0 );\n* // returns [ 1, 6, 3, 8 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\nfunction assign( condition, x, y, out, stride, offset ) {\n\tvar co;\n\tvar xo;\n\tvar yo;\n\tvar oo;\n\tvar N;\n\n\t// Check whether we can avoid doing any work...\n\tif ( condition.length === 0 ) {\n\t\treturn out;\n\t}\n\t// Compute the number of indexed elements in the output array:\n\tN = numel( out.length, stride, offset );\n\n\tco = arraylike2object( condition );\n\tif ( isBooleanDataType( co.dtype ) ) {\n\t\tcondition = reinterpretBool( condition, 0 );\n\t\tco = arraylike2object( condition );\n\t}\n\txo = arraylike2object( x );\n\tyo = arraylike2object( y );\n\too = arraylike2object( out );\n\tif (\n\t\tco.accessorProtocol ||\n\t\txo.accessorProtocol ||\n\t\tyo.accessorProtocol ||\n\t\too.accessorProtocol\n\t) {\n\t\t// Note: we only explicitly special case a select number of same dtype-to-dtype combinations, as this function should not be concerned with casting rules, etc. That is left to userland...\n\t\tif (\n\t\t\tco.accessorProtocol === false &&\n\t\t\tisBooleanDataType( xo.dtype ) &&\n\t\t\tisBooleanDataType( yo.dtype ) &&\n\t\t\tisBooleanDataType( oo.dtype )\n\t\t) {\n\t\t\tindexed( N, condition, reinterpretBool( x, 0 ), reinterpretBool( y, 0 ), reinterpretBool( out, 0 ), stride, offset ); // eslint-disable-line max-len\n\t\t\treturn out;\n\t\t}\n\t\tif (\n\t\t\tisComplexDataType( xo.dtype ) &&\n\t\t\tisComplexDataType( yo.dtype ) &&\n\t\t\tisComplexDataType( oo.dtype )\n\t\t) {\n\t\t\tcomplex( N, co, reinterpretCmplx( x, 0 ), reinterpretCmplx( y, 0 ), reinterpretCmplx( out, 0 ), stride, offset ); // eslint-disable-line max-len\n\t\t\treturn out;\n\t\t}\n\t\taccessors( N, co, xo, yo, oo, stride, offset );\n\t\treturn out;\n\t}\n\tindexed( N, condition, x, y, out, stride, offset );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default assign;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ceil from '@stdlib/math-base-special-ceil';\n\n\n// MAIN //\n\n/**\n* Computes the number of indexed elements in a strided array.\n*\n* @private\n* @param {NonNegativeInteger} len - array length\n* @param {integer} stride - array stride\n* @param {NonNegativeInteger} offset - array offset\n* @returns {NonNegativeInteger} number of indexed elements\n*\n* @example\n* var N = numel( 10, -2, 9 );\n* // returns 5\n*\n* N = numel( 10, -2, 8 );\n* // returns 5\n*\n* N = numel( 10, -2, 7 );\n* // returns 4\n*\n* N = numel( 10, -2, 6 );\n* // returns 4\n*\n* N = numel( 10, -2, 5 );\n* // returns 3\n*\n* @example\n* var N = numel( 10, -3, 9 );\n* // returns 4\n*\n* N = numel( 10, -3, 8 );\n* // returns 3\n*\n* N = numel( 10, -3, 7 );\n* // returns 3\n*\n* N = numel( 10, -3, 6 );\n* // returns 3\n*\n* N = numel( 10, -3, 5 );\n* // returns 2\n*\n* @example\n* var N = numel( 10, 2, 0 );\n* // returns 5\n*\n* N = numel( 10, 2, 1 );\n* // returns 5\n*\n* N = numel( 10, 2, 2 );\n* // returns 4\n*\n* N = numel( 10, 2, 3 );\n* // returns 4\n*\n* @example\n* var N = numel( 10, 3, 0 );\n* // returns 4\n*\n* N = numel( 10, 3, 1 );\n* // returns 3\n*\n* N = numel( 10, 3, 2 );\n* // returns 3\n*\n* N = numel( 10, 3, 3 );\n* // returns 3\n*/\nfunction numel( len, stride, offset ) {\n\tif ( stride < 0 ) {\n\t\treturn ceil( (offset+1) / -stride );\n\t}\n\treturn ceil( (len-offset) / stride );\n}\n\n\n// EXPORTS //\n\nexport default numel;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Take elements from either one of two arrays depending on a condition.\n*\n* @module @stdlib/array-base-where\n*\n* @example\n* import where from '@stdlib/array-base-where';\n*\n* var x = [ 1, 2, 3, 4 ];\n* var y = [ 5, 6, 7, 8 ];\n*\n* var condition = [ true, false, true, false ];\n*\n* var z = where( condition, x, y );\n* // returns [ 1, 6, 3, 8 ]\n*\n* @example\n* import where from '@stdlib/array-base-where';\n*\n* var x = [ 1, 2, 3, 4 ];\n* var y = [ 5, 6, 7, 8 ];\n*\n* var out = [ 0, 0, 0, 0 ];\n* var condition = [ true, false, true, false ];\n*\n* var arr = where.assign( condition, x, y, out, 1, 0 );\n* // returns [ 1, 6, 3, 8 ]\n*\n* var bool = ( arr === out );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport assign from './assign.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'assign', assign );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["resolveStride","M","N","Error","where","condition","x","y","xget","yget","cget","lens","out","sx","sy","sc","ix","iy","ic","v","i","length","maxn","resolveGetter","push","indexed","stride","offset","io","assign","co","xo","yo","oo","len","ceil","numel","arraylike2object","isBooleanDataType","dtype","reinterpretBool","accessorProtocol","isComplexDataType","cdata","so","data","accessors","complex","reinterpretCmplx","xdata","ydata","odata","oset","setReadOnly","main"],"mappings":"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"}